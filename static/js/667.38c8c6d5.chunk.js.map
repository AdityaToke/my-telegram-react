{"version":3,"file":"static/js/667.38c8c6d5.chunk.js","mappings":"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","sources":["Assets/Icons/Smile.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Utils/Game.js","Components/Actions.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js","Utils/Animatior.js"],"sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender_id } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender: sender_id }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './CallSettingsVideoPreview.css';\n\nclass CallSettingsVideoPreview extends React.Component {\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <div>\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\n            </div>\n        );\n    }\n\n}\n\nCallSettingsVideoPreview.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default CallSettingsVideoPreview;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\n        if (inputAudioStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\n                inputAudioStream.getAudioTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n\n        if (inputVideoStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\n                inputVideoStream.getVideoTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall, currentCall } = CallStore;\n                if (currentGroupCall) {\n                    const { streamManager } = currentGroupCall;\n                    if (!streamManager) return;\n\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                } else if (currentCall) {\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                }\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getVideoTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideoStream,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n\n                        { callId && (\n                            <>\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                                </div>\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\n                                {/*<div>*/}\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\n                                {/*</div>*/}\n                            </>\n                        )}\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallIcon from '@material-ui/icons/Call';\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallSettings from './GroupCallSettings';\nimport MenuIcon from '../../Assets/Icons/More';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { closeCallPanel } from '../../Actions/Call';\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './CallPanel.css';\n\nconst SUPPORTS_ROTATION = true;\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        const { callId } = props;\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false,\n\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.on('updateCall', this.handleUpdateCall);\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.off('updateCall', this.handleUpdateCall);\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    onClientUpdateCallMediaState = update => {\n        const { callId: currentCallId } = this.props;\n        const { callId, mediaState, type } = update;\n        if (callId !== currentCallId) return;\n\n        if (type === 'input') {\n            this.setState({ inputMediaState: mediaState });\n        } else {\n            this.setState({ outputMediaState: mediaState });\n        }\n    };\n\n    handleUpdateCall = update => {\n        this.forceUpdate();\n    };\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        closeCallPanel();\n        setTimeout(() => {\n            CallStore.p2pHangUp(callId, true);\n        }, 100);\n    };\n\n    handleOpenSettings = async event => {\n        this.handleCloseContextMenu();\n\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        if (this.isFullScreen()) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.handleDiscard(null);\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleAudio = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const { muted } = inputMediaState;\n\n        CallStore.p2pAudioEnabled(muted);\n    };\n\n    handleVideo = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const muted = inputMediaState.videoState === 'inactive';\n\n        CallStore.p2pVideoEnabled(muted)\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\n        const { currentCall } = CallStore;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId, is_outgoing, state } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        let outputVideoStyle = null;\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\n            outputVideoStyle = {\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\n            };\n        }\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        <div className='group-call-join-panel-subtitle'>\n                            {p2pGetCallStatus(callId)}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleOpenSettings}>\n                                <ListItemText primary={t('Settings')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\n                </div>\n                { outputMediaState && outputMediaState.muted && (\n                    <div className='call-panel-microphone-hint'>\n                        <div className='call-panel-microphone-hint-wrapper'>\n                            <MicOffIcon/>\n                            <div className='call-panel-microphone-hint-text'>\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className='group-call-panel-buttons'>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\n                        <div className='group-call-panel-button'>\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                                <CallIcon />\n                            </div>\n                            <div className='group-call-panel-button-text'>\n                                {t('VoipAnswerCall')}\n                            </div>\n                        </div>\n                    )}\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\n                        </div>\n                    </div>\n                </div>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender_id} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_id } = last_message;\n        if (sender_id.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_id } = last_message;\n                switch (sender_id['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender_id.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender_id.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        return;\n\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: 300\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_id.user_id && chatSearch ? (\n                <UserTile userId={sender_id.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_id.user_id) {\n                users.set(messages.messages[i].sender_id.user_id, messages.messages[i].sender_id.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender_id } = message;\n                if (sender_id && sender_id.user_id) {\n                    users.set(sender_id.user_id, sender_id.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_id.user_id) {\n                users.set(result.messages[i].sender_id.user_id, result.messages[i].sender_id.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SectionHeader from '../SectionHeader';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacyCalls.css';\n\nclass PrivacyCalls extends React.Component {\n    state = {\n        prevAllowCalls: null,\n        prevAllowP2PCalls: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { allowCalls, allowP2PCalls } = props;\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\n            const allowCallsValue = allowCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            return {\n                prevAllowCalls: allowCalls,\n                prevAllowP2PCalls: allowP2PCalls,\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\n            }\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.setSettings();\n    }\n\n    setSettings() {\n        const { allowCalls, allowP2PCalls } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\n                rules\n            });\n        }\n\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowP2PCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowP2PCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowP2PCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\n                rules\n            });\n        }\n    }\n\n    handleChangeAllowCalls = event => {\n        this.setState({\n            allowCallsValue: event.currentTarget.value\n        });\n    };\n\n    handleChangeAllowP2PCalls = event => {\n        this.setState({\n            allowP2PCallsValue: event.currentTarget.value\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Calls')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nPrivacyCalls.propTypes = {\n    allowCalls: PropTypes.object.isRequired,\n    allowP2PCalls: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(PrivacyCalls);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\nimport PrivacyCalls from './PrivacyCalls';\nimport { CallOutlined } from '@material-ui/icons';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        openActiveSessions: false,\n\n        users: null,\n        openBlockedUsers: false,\n\n        allowCalls: null,\n        allowP2PCalls: null,\n        openCalls: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\n        }).catch(() => null));\n\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\n\n        this.setState({\n            sessions,\n            users,\n            allowCalls,\n            allowP2PCalls\n        });\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    openCalls = () => {\n        const { allowCalls, allowP2PCalls } = this.state;\n        if (!allowCalls || !allowP2PCalls) return;\n\n        this.setState({\n            openCalls: true\n        });\n    };\n\n    closeCalls = () => {\n        this.setState({\n            openCalls: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            openBlockedUsers, users,\n            openActiveSessions, sessions,\n            openCalls, allowCalls, allowP2PCalls\n        } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openCalls}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('Calls')}\n                                secondary={''}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        const isCall = isCallMessage(chatId, messageId);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender_id, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender_id.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, via_bot_user_id } = message;\n                let userId = sender_id.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\n\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {showMeta && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        console.log(\"last 2\");\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_id, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender_id, prevMessage.sender_id) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-28px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender_id } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender_id.user_id ? <UserTile userId={sender_id.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender_id} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\n                {Boolean(callId) && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n"],"names":["createSvgIcon","d","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","React","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","Dialog","open","manager","modalManager","transitionDuration","classes","paper","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","getUserShortName","getSimpleMarkupEntities","chat_id","location","getChatLocation","address","isChannelChat","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","get","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","time","parseInt","timeString","Math","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","edge","Visibility","VisibilityOff","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","now","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","startTime","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","openGameInBrowser","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","window","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","newWindow","opener","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","sender_id","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","inProgress","Number","MAX_VALUE","persist","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","filter","x","kind","deviceId","inputAudioDeviceId","inputAudio","inputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","currentCall","streamManager","inputAudioStream","getAudioTracks","forEach","stop","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","handleMuteNewParticipants","handleDone","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","removeEventListener","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","handleDiscard","closeCallPanel","setTimeout","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","handleVideo","videoState","callPanelRef","contextMenu","left","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Call","Mic","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","Animator","from","scrollLeft","to","offsetWidth","func","start","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","ChatBubbleOutlineOutlined","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","getMedia","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","duration","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","store","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","migratedChatId","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","ErrorOutline","wordWrap","AlternateEmail","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","Search","openIcon","SharedMediaBase","TypeError","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Archive","Group","getViewInfoTitle","Unmute","Mute","Message","Unread","Component","DialogPlaceholder","titleWidth","sin","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","overScanCount","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","min","scrollBottom","max","CacheManager","removeItem","clear","CacheStore","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","options","OutputTypingManager","small","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","basicGroup","entries","getCache","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","openSupportChat","searchChat","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Settings","Help","closeIcon","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","reorderChats","stub","fistSliceLoaded","cacheItems","orderedChatIds","a","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","getListRef","appendChats","newChats","Array","oldChatIds","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","command","multiline","children","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","SettingsMenuButton","handleLogOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","maxHeight","requestAnimationFrame","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","fallback","autoplay","loop","stringData","Add","Remove","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","onUnblock","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","CallOutlined","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","exit","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","POLL_OPTION_LENGTH","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","n","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","PI","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","draw","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","handleStartP2PCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","Broom","Block","ReportOutlined","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","volume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff","VolumeMute","VolumeDown","VolumeUp","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","getIcon","Repeat","RepeatOne","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","load","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","SkipPrevious","Pause","PlayArrow","SkipNext","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","canBeSelected","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","Album","lastHighlighted","every","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","MessageContext","KeyboardButton","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","MessageComponent","Consumer","KeyboardRow","row","ReplyMarkup","markup","rows","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","ArrowDownward","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","STICKER_SMALL_DISPLAY_SIZE","preview","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","NONE","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","clickedPinned","currentPinned","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","Link","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","save","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","participants","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","mediaViewerContent","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage","withSnackbarNotifications","stopped","startInternal","timeStamp","endTime","last","p","val","outSine","cancelAnimationFrame"],"sourceRoot":""}